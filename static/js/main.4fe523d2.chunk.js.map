{"version":3,"sources":["../sw_home_v1.js"],"names":["self","addEventListener","event","skipWaiting","offlinePage","Request","waitUntil","fetch","then","response","caches","open","cache","put","respondWith","request","catch","error","match","data","json","opts","body","icon","url","registration","showNotification","title","notification","close","clients","openWindow"],"mappings":"yFAAAA,KAAKC,iBAAiB,WAAW,SAASC,GACxCF,KAAKG,cAEL,IAAIC,EAAc,IAAIC,QAAQ,oBAC9BH,EAAMI,UACNC,MAAMH,GAAaI,MAAK,SAASC,GAC/B,OAAOC,OAAOC,KAAK,YAAYH,MAAK,SAASI,GAC3C,OAAOA,EAAMC,IAAIT,EAAaK,aAGhCT,KAAKC,iBAAiB,SAAS,SAASC,GAC1CA,EAAMY,YACJP,MAAML,EAAMa,SAASC,OAAM,SAASC,GAChC,OAAOP,OAAOC,KAAK,YAAYH,MAAK,SAASI,GAC3C,OAAOA,EAAMM,MAAM,0BAGzBlB,KAAKC,iBAAiB,kBAAkB,SAASQ,GACnD,OAAOC,OAAOC,KAAK,YAAYH,MAAK,SAASI,GAC3C,OAAOA,EAAMC,IAAIT,YAAaK,SAE9BT,KAAKC,iBAAiB,QAAQ,SAAUC,GAC1C,IAAIiB,EAAOjB,EAAMiB,KAAKC,OAAcC,EAAO,CACzCC,KAAMH,EAAKG,KACXC,KAAMJ,EAAKI,KACXJ,KAAM,CACJK,IAAKL,EAAKK,MAGdtB,EAAMI,UAAUN,KAAKyB,aAAaC,iBAAiBP,EAAKQ,MAAON,OAC7DrB,KAAKC,iBAAiB,qBAAqB,SAASC,GACtD,IAAIiB,EAAOjB,EAAM0B,aAAaT,KAAQjB,EAAM0B,aAAaC,QAAW3B,EAAMI,UACxEwB,QAAQC,WAAWZ,EAAKK,W","file":"static/js/main.4fe523d2.chunk.js","sourcesContent":["self.addEventListener('install', function(event) {\r\n  self.skipWaiting();\r\n  \r\n  var offlinePage = new Request('home_PWA_v1.html');\r\n  event.waitUntil(\r\n  fetch(offlinePage).then(function(response) {\r\n    return caches.open('offline2').then(function(cache) {\r\n      return cache.put(offlinePage, response);\r\n    });\r\n  }));\r\n}); self.addEventListener('fetch', function(event) {\r\n  event.respondWith(\r\n    fetch(event.request).catch(function(error) {\r\n        return caches.open('offline2').then(function(cache) {\r\n          return cache.match('offline.html');\r\n      });\r\n    }));\r\n}); self.addEventListener('refreshOffline', function(response) {\r\n  return caches.open('offline2').then(function(cache) {\r\n    return cache.put(offlinePage, response);\r\n  });\r\n}); self.addEventListener('push', function (event) {\r\n  var data = event.data.json();   var opts = {\r\n    body: data.body,\r\n    icon: data.icon,\r\n    data: {\r\n      url: data.url\r\n    }\r\n  };\r\n  event.waitUntil(self.registration.showNotification(data.title, opts));\r\n}); self.addEventListener('notificationclick', function(event) {\r\n  var data = event.notification.data;   event.notification.close();   event.waitUntil(\r\n    clients.openWindow(data.url)\r\n  );\r\n});"],"sourceRoot":""}