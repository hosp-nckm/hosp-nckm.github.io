{"ast":null,"code":"self.addEventListener('install', function (event) {\n  self.skipWaiting();\n  var offlinePage = new Request('home_PWA_v1.html');\n  event.waitUntil(fetch(offlinePage).then(function (response) {\n    return caches.open('offline2').then(function (cache) {\n      return cache.put(offlinePage, response);\n    });\n  }));\n});\nself.addEventListener('fetch', function (event) {\n  event.respondWith(fetch(event.request).catch(function (error) {\n    return caches.open('offline2').then(function (cache) {\n      return cache.match('offline.html');\n    });\n  }));\n});\nself.addEventListener('refreshOffline', function (response) {\n  return caches.open('offline2').then(function (cache) {\n    return cache.put(offlinePage, response);\n  });\n});\nself.addEventListener('push', function (event) {\n  var data = event.data.json();\n  var opts = {\n    body: data.body,\n    icon: data.icon,\n    data: {\n      url: data.url\n    }\n  };\n  event.waitUntil(self.registration.showNotification(data.title, opts));\n});\nself.addEventListener('notificationclick', function (event) {\n  var data = event.notification.data;\n  event.notification.close();\n  event.waitUntil(clients.openWindow(data.url));\n});","map":{"version":3,"sources":["C:/Users/alice/Documents/GitHub/hosp-nckm.github.io/web/粉紅旅程/sw_home_v1.js"],"names":["self","addEventListener","event","skipWaiting","offlinePage","Request","waitUntil","fetch","then","response","caches","open","cache","put","respondWith","request","catch","error","match","data","json","opts","body","icon","url","registration","showNotification","title","notification","close","clients","openWindow"],"mappings":"AAAAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAASC,KAAT,EAAgB;AAC/CF,EAAAA,IAAI,CAACG,WAAL;AAEA,MAAIC,WAAW,GAAG,IAAIC,OAAJ,CAAY,kBAAZ,CAAlB;AACAH,EAAAA,KAAK,CAACI,SAAN,CACAC,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwB,UAASC,QAAT,EAAmB;AACzC,WAAOC,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAwBH,IAAxB,CAA6B,UAASI,KAAT,EAAgB;AAClD,aAAOA,KAAK,CAACC,GAAN,CAAUT,WAAV,EAAuBK,QAAvB,CAAP;AACD,KAFM,CAAP;AAGD,GAJD,CADA;AAMD,CAVD;AAUIT,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAASC,KAAT,EAAgB;AACjDA,EAAAA,KAAK,CAACY,WAAN,CACEP,KAAK,CAACL,KAAK,CAACa,OAAP,CAAL,CAAqBC,KAArB,CAA2B,UAASC,KAAT,EAAgB;AACvC,WAAOP,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAwBH,IAAxB,CAA6B,UAASI,KAAT,EAAgB;AAClD,aAAOA,KAAK,CAACM,KAAN,CAAY,cAAZ,CAAP;AACH,KAFQ,CAAP;AAGH,GAJD,CADF;AAMD,CAPG;AAOAlB,IAAI,CAACC,gBAAL,CAAsB,gBAAtB,EAAwC,UAASQ,QAAT,EAAmB;AAC7D,SAAOC,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAwBH,IAAxB,CAA6B,UAASI,KAAT,EAAgB;AAClD,WAAOA,KAAK,CAACC,GAAN,CAAUT,WAAV,EAAuBK,QAAvB,CAAP;AACD,GAFM,CAAP;AAGD,CAJG;AAIAT,IAAI,CAACC,gBAAL,CAAsB,MAAtB,EAA8B,UAAUC,KAAV,EAAiB;AACjD,MAAIiB,IAAI,GAAGjB,KAAK,CAACiB,IAAN,CAAWC,IAAX,EAAX;AAAgC,MAAIC,IAAI,GAAG;AACzCC,IAAAA,IAAI,EAAEH,IAAI,CAACG,IAD8B;AAEzCC,IAAAA,IAAI,EAAEJ,IAAI,CAACI,IAF8B;AAGzCJ,IAAAA,IAAI,EAAE;AACJK,MAAAA,GAAG,EAAEL,IAAI,CAACK;AADN;AAHmC,GAAX;AAOhCtB,EAAAA,KAAK,CAACI,SAAN,CAAgBN,IAAI,CAACyB,YAAL,CAAkBC,gBAAlB,CAAmCP,IAAI,CAACQ,KAAxC,EAA+CN,IAA/C,CAAhB;AACD,CATG;AASArB,IAAI,CAACC,gBAAL,CAAsB,mBAAtB,EAA2C,UAASC,KAAT,EAAgB;AAC7D,MAAIiB,IAAI,GAAGjB,KAAK,CAAC0B,YAAN,CAAmBT,IAA9B;AAAsCjB,EAAAA,KAAK,CAAC0B,YAAN,CAAmBC,KAAnB;AAA8B3B,EAAAA,KAAK,CAACI,SAAN,CAClEwB,OAAO,CAACC,UAAR,CAAmBZ,IAAI,CAACK,GAAxB,CADkE;AAGrE,CAJG","sourcesContent":["self.addEventListener('install', function(event) {\r\n  self.skipWaiting();\r\n  \r\n  var offlinePage = new Request('home_PWA_v1.html');\r\n  event.waitUntil(\r\n  fetch(offlinePage).then(function(response) {\r\n    return caches.open('offline2').then(function(cache) {\r\n      return cache.put(offlinePage, response);\r\n    });\r\n  }));\r\n}); self.addEventListener('fetch', function(event) {\r\n  event.respondWith(\r\n    fetch(event.request).catch(function(error) {\r\n        return caches.open('offline2').then(function(cache) {\r\n          return cache.match('offline.html');\r\n      });\r\n    }));\r\n}); self.addEventListener('refreshOffline', function(response) {\r\n  return caches.open('offline2').then(function(cache) {\r\n    return cache.put(offlinePage, response);\r\n  });\r\n}); self.addEventListener('push', function (event) {\r\n  var data = event.data.json();   var opts = {\r\n    body: data.body,\r\n    icon: data.icon,\r\n    data: {\r\n      url: data.url\r\n    }\r\n  };\r\n  event.waitUntil(self.registration.showNotification(data.title, opts));\r\n}); self.addEventListener('notificationclick', function(event) {\r\n  var data = event.notification.data;   event.notification.close();   event.waitUntil(\r\n    clients.openWindow(data.url)\r\n  );\r\n});"]},"metadata":{},"sourceType":"script"}